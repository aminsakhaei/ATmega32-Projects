;
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;float v;
;unsigned char dot='.';
;unsigned int a,adc_data;
;
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 000A {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 000B TCNT0 =  0x06;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 000C }
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;
;interrupt [ADC_INT] void adc_isr(void){
; 0000 000E interrupt [17] void adc_isr(void){
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 000F adc_data = ADCW;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0010 }
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;
;unsigned int read_adc(void){
; 0000 0012 unsigned int read_adc(void){
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0013 #asm                          //noise cancelling
;PCODE: $0000001D VOL: 0
; 0000 0014     in   r30,mcucr
    in   r30,mcucr
;PCODE: $0000001E VOL: 0
; 0000 0015     cbr  r30,__sm_mask
    cbr  r30,__sm_mask
;PCODE: $0000001F VOL: 0
; 0000 0016     sbr  r30,__se_bit | __sm_adc_noise_red
    sbr  r30,__se_bit | __sm_adc_noise_red
;PCODE: $00000020 VOL: 0
; 0000 0017     out  mcucr,r30
    out  mcucr,r30
;PCODE: $00000021 VOL: 0
; 0000 0018     sleep
    sleep
;PCODE: $00000022 VOL: 0
; 0000 0019     cbr  r30,__se_bit
    cbr  r30,__se_bit
;PCODE: $00000023 VOL: 0
; 0000 001A     out  mcucr,r30
    out  mcucr,r30
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 001B #endasm
; 0000 001C return adc_data;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 001D }
;PCODE: $00000028 VOL: 0
;
;void lcd_command (void){
; 0000 001F void lcd_command (void){
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0020 PORTC = 0x00;                 //E=0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0021 delay_ms(2);
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0022 PORTC = 0x04;                 //E=1
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0023 }
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;
;void lcd_setup (void){
; 0000 0025 void lcd_setup (void){
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0026 PORTD = 0x38;                 //‰„«Ì‘ œ— œÊ”ÿ »« ¬—«ÌÂ 7*5
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0027 lcd_command();
;PCODE: $00000038 VOL: 0
; 0000 0028 
; 0000 0029 PORTD = 0x0C;                 //Œ«„Ê‘ ò—œ‰ ‰‘«‰ê— Ê ‰„«Ì‘ê—
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 002A lcd_command();
;PCODE: $0000003B VOL: 0
; 0000 002B 
; 0000 002C PORTD = 0X01;                 //clear
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 002D lcd_command();
;PCODE: $0000003E VOL: 0
; 0000 002E 
; 0000 002F PORTD = 0x06;                 //„œ Ê—Êœ œ«œÂ
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0030 lcd_command();
;PCODE: $00000041 VOL: 0
; 0000 0031 }
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;
;void lcd_data (void){
; 0000 0033 void lcd_data (void){
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0034 PORTC = 0x01;                 //RS=1
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 0035 delay_ms(2);
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0036 PORTC = 0x04;                 //E=1
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0037 }
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;
;void main(void)
; 0000 003A {
;PCODE: $0000004F VOL: 0
; 0000 003B DDRC = 0xFF;                  //make port C output
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 003C PORTC = 0x04;                 //E=1(OFF)
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 003D DDRD = 0xFF;                  //make port D output
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 003E 
; 0000 003F 
; 0000 0040 //ADC
; 0000 0041 ACSR = (1<<ACD);                                   //Analog Comparator Disable
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0042 ADMUX = (1<<REFS0) | (0<<REFS0);                   //AVCC with external capacitor at AREF pin
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0043 ADCSRA = (1<<ADEN) | (0<<ADSC) | (1<<ADATE) | (0<<ADIF) | (1<<ADIE) | (1<<ADPS2) | (1<<ADPS1) | (0<<ADPS0);    //ADC & A ...
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0044 SFIOR = (1<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);      //Timer/Counter0 Overflow
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 0045 
; 0000 0046 //TIMER 0
; 0000 0047 TCCR0 =  (1<<CS02) | ((0<<CS01)) | ((1<<CS00));    //clkI/O/1024 (From prescaler)
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 0048 TCNT0 =  0x06;
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0049 TIMSK = (1<<TOIE0);                                //Overflow Interrupt Enable
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 004A #asm("sei")
;PCODE: $00000064 VOL: 0
	sei
;PCODE: $00000065 VOL: 0
; 0000 004B 
; 0000 004C lcd_setup();
;PCODE: $00000066 VOL: 0
; 0000 004D 
; 0000 004E while (1)
;PCODE: $00000067 VOL: 0
; 0000 004F     {
; 0000 0050     v = read_adc();
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 0051     v = (5*v)/1023;               //Ê· «é Å«ÌÂ
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 0052 
; 0000 0053     PORTD = 0x80;                 //‰„«Ì‘ ⁄œœ ’ÕÌÕ
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 0054     lcd_command();
;PCODE: $00000075 VOL: 0
; 0000 0055     a = v;
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 0056     PORTD = 0x30 + a;
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 0057     lcd_data();
;PCODE: $0000007C VOL: 0
; 0000 0058 
; 0000 0059     PORTD = 0x81;                 //‰„«Ì‘ „„Ì“
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 005A     lcd_command();
;PCODE: $0000007F VOL: 0
; 0000 005B     PORTD = dot;
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 005C     lcd_data();
;PCODE: $00000082 VOL: 0
; 0000 005D 
; 0000 005E     PORTD = 0x82;                 //‰„«Ì‘ «⁄‘«—
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 005F     lcd_command();
;PCODE: $00000085 VOL: 0
; 0000 0060     a = (v *10);
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 0061     PORTD = 0x30 + (a%10);
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0000 0062     lcd_data();
;PCODE: $00000090 VOL: 0
; 0000 0063 }
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 0064 
; 0000 0065 }
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
